{
  "name": "queue-promise",
  "version": "1.3.32",
  "keywords": [
    "queue",
    "queue-tasks",
    "queue-promise",
    "promise",
    "promise-chain",
    "promise-queue"
  ],
  "files": [
    "/dist"
  ],
  "engines": {
    "node": ">=8.12.0"
  },
  "description": "A simple, dependency-free library for concurrent promise-based queues. Comes with with concurrency and timeout control.",
  "author": "≈Åaniewski Bartosz <bartosz@laniewski.me> (https://laniewski.me/)",
  "license": "MIT",
  "main": "dist/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Bartozzz/queue-promise.git"
  },
  "bugs": {
    "url": "https://github.com/Bartozzz/queue-promise/issues"
  },
  "dependencies": {},
  "devDependencies": {
    "@babel/cli": "^7.8.3",
    "@babel/core": "^7.8.3",
    "@babel/plugin-proposal-async-generator-functions": "^7.8.3",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/plugin-proposal-object-rest-spread": "^7.8.3",
    "@babel/preset-env": "^7.8.3",
    "@babel/preset-flow": "^7.8.3",
    "@babel/register": "^7.8.3",
    "babel-eslint": "^10.0.3",
    "babel-plugin-add-module-exports": "^1.0.2",
    "babel-preset-minify": "0.5.1",
    "chai": "^4.2.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-config-standard": "^14.1.0",
    "eslint-plugin-flowtype": "^4.6.0",
    "eslint-plugin-import": "^2.20.0",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "flow-bin": "^0.121.0",
    "mocha": "^7.0.1",
    "prettier": "^2.0.2",
    "rimraf": "^3.0.0"
  },
  "scripts": {
    "test": "npm run prepare && npm run test:eslint && npm run test:flow && npm run test:mocha",
    "test:flow": "flow",
    "test:mocha": "mocha --require @babel/register",
    "test:eslint": "eslint --fix src",
    "clean": "rimraf dist",
    "build": "babel src -d dist",
    "watch": "babel src -d dist -w",
    "prepare": "npm run clean && npm run build"
  }
}
